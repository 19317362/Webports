diff --git a/gio/glocalfile.c b/gio/glocalfile.c
--- a/gio/glocalfile.c
+++ b/gio/glocalfile.c
@@ -69,6 +69,16 @@
 
 #include "glib-private.h"
 
+/*
+ * The headers for the NaCl newlib toolchain define AT_FDCWD
+ * and this file interprets that to mean that openat, and fstatat
+ * are useable, which they are not.
+ * TODO(sbc): remove this once we fix this bug: http://crbug.com/436533
+ */
+#if defined(__native_client__) && defined(_NEWLIB_VERSION)
+#undef AT_FDCWD
+#endif
+
 #ifdef G_OS_WIN32
 #include <windows.h>
 #include <io.h>
@@ -86,7 +96,6 @@
 #endif
 #endif
 
-
 static void g_local_file_file_iface_init (GFileIface *iface);
 
 static GFileAttributeInfoList *local_writable_attributes = NULL;
diff --git a/glib/gbacktrace.h b/glib/gbacktrace.h
--- a/glib/gbacktrace.h
+++ b/glib/gbacktrace.h
@@ -47,7 +47,9 @@ void g_on_error_stack_trace (const gchar *prg_name);
  * On x86 and alpha systems this is implemented as a soft interrupt
  * and on other architectures it raises a `SIGTRAP` signal.
  */
-#if (defined (__i386__) || defined (__x86_64__)) && defined (__GNUC__) && __GNUC__ >= 2
+#if defined(__native_client__)
+#  define G_BREAKPOINT() __builtin_trap()
+#elif (defined (__i386__) || defined (__x86_64__)) && defined (__GNUC__) && __GNUC__ >= 2
 #  define G_BREAKPOINT()        G_STMT_START{ __asm__ __volatile__ ("int $03"); }G_STMT_END
 #elif (defined (_MSC_VER) || defined (__DMC__)) && defined (_M_IX86)
 #  define G_BREAKPOINT()        G_STMT_START{ __asm int 3h }G_STMT_END
