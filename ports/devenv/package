#!/bin/bash
# Copyright (c) 2014 The Native Client Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# Package installer script for use inside the devenv environment.
# Assumes setup-environment has been source at least once in the parent
# environment.
# Written to avoid using anything other than bash, geturl, and unzip when
# installing core packages.

set -o errexit
set -o nounset
shopt -s nullglob

PKG_ARCH="${NACL_ARCH}"
if [[ "${NACL_ARCH}" == "x86_64" ]]; then
  PKG_ARCH="x86-64"
fi

STORAGE_URL=${STORAGE_URL:-https://naclports.storage.googleapis.com/builds}
SDK_VERSION=${SDK_VERSION:-pepper_46}

# This default version for packages that are downloaded and installed.
# To update this use 'git describe <rev>' to get the revision string.  Be
# sure to wait until the bot have build all the packages for a given
# revision before changing this value.

REVISION=${REVISION:-trunk-626-gb638392}
if [[ ${TOOLCHAIN} == ${PKG_ARCH} ]]; then
  PKG_DIR=pkg_${TOOLCHAIN}
else
  PKG_DIR=pkg_${TOOLCHAIN}_${PKG_ARCH}
fi

DEFAULT_SOURCE="${STORAGE_URL}/${SDK_VERSION}/${REVISION}/publish/${PKG_DIR}"
LOCAL_SOURCE="http://localhost:5103/${PKG_DIR}"
VERBOSE=0

# List of packages (keep sorted).
# Pairs of <package-name>:<status><package-subdir>[:<source>:<alt-subdir>]
PACKAGE_INFO="\
"

ALIASES="\
bash|bash-4.3 \
binutils|binutils-7dc2f2590 \
gcc|gcc-396037926 \
blackbox|blackbox
busybox|busybox-1.22.0
bzip2|bzip2-1.0.6 \
civitweb|civitweb \
coreutils|coreutils-5.2.1 \
nacl-spawn|nacl-spawn-0.1 \
corelibs|corelibs-0.2 \
file|file-5.24 \
curl|curl-7.44.0 \
drod|drod \
emacs|emacs-24.3 \
findutils|findutils-4.4.2 \
fvwm|fvwm \
gawk|gawk \
gforth|gforth \
tree|tree-1.7.0 \
git|git-2.3.0 \
pcre|pcre-8.36 \
grep|grep-2.21 \
less|less-451 \
lua|lua-5.3 \
m4|m4 \
make|make-3.82 \
mingn|mingn-0.2 \
nano|nano-2.2.6 \
nethack|nethack \
ninja|ninja \
openssh|openssh \
python3|python3-3.4 \
python|python-2.7.7 \
ruby|ruby \
sqlite|sqlite \
subversion|subversion \
tar|tar \
libtar|libtar-1.2.11 \
texlive|texlive \
thttpd|thttpd \
tk|tk \
toybox|toybox \
twm|twm \
vim|vim-7.4 \
xeyes|xeyes \
xz|xz \
zlib|zlib-1.2.8 \
openssl|openssl-1.0.2d \
ncurses|ncurses-5.9 \
readline|readline-6.3 \
"

#
# $1 - package name
#
InstallPackage() {
  package=$1

  # Replace package aliases with alternates.
  for names in ${ALIASES}; do
    local names_array=(${names//|/ })
    if [ "${package}" = "${names_array[0]}" ]; then
      package="${names_array[1]}"
    fi
  done
  if [[ ${PACKAGE_FORCE} != 1 ]]; then
    if pkg info --quiet ${package}; then
      return
    fi
  fi

  if ! pkg add ${PACKAGE_SOURCE}/${package}.tbz; then
    echo "pkg add failed: $?"
    exit 1
  fi
}

function Usage() {
  echo "Usage: $0 [options]"
  echo "  -i <package> = install package"
  echo "  -s <source> = alternate package source"
  echo "  -L = local package source (use with make run in naclports)"
  echo "  -f = force install"
  echo "  -l = list known packages"
  echo "  -h = help"
  exit 1
}

function main() {
  PACKAGE_LIST=""
  PACKAGE_FORCE=0
  ALTERNATE_SOURCE=0

  while getopts "vs:i:hLfl" o; do
    case "${o}" in
      i)
        PACKAGE_LIST+=" ${OPTARG}"
        ;;
      s)
        PACKAGE_SOURCE="${OPTARG}/${PKG_DIR}"
        ;;
      L)
        PACKAGE_SOURCE="${LOCAL_SOURCE}"
        ;;
      f)
        PACKAGE_FORCE=1
        ;;
      v)
        VERBOSE=1
        ;;
      l)
        NEXT_COL="\\r\\x1b[30C"
        echo -e "PACKAGE${NEXT_COL}STATUS"
        echo -e "-------${NEXT_COL}------"
        for info in ${PACKAGE_INFO}; do
          local info_array=(${info//|/ })
          echo -e "${info_array[0]}${NEXT_COL}${info_array[1]}"
        done
        exit 0
        ;;
      *)
        Usage
        ;;
    esac
  done
  shift $((OPTIND-1))

  if [ "$*" != "" ]; then
    echo "Bad Options: $*"
    Usage
  fi

  if [ "${PACKAGE_LIST}" = "" ]; then
    echo "No packages selected."
    Usage
  fi

  if [ -z "${NACL_ARCH:-}" ]; then
    echo "error: NACL_ARCH not set"
    exit 1
  fi

  if [ -z "${TOOLCHAIN:-}" ]; then
    echo "error: TOOLCHAIN not set"
    exit 1
  fi

  if [ "${PACKAGE_SOURCE:-}" = "" ]; then
    if [ "${NACL_DEVENV_LOCAL:-}" = "1" ]; then
      PACKAGE_SOURCE="${LOCAL_SOURCE}"
    else
      PACKAGE_SOURCE="${DEFAULT_SOURCE}"
      ALTERNATE_SOURCE=1
    fi
  fi

  for package in ${PACKAGE_LIST}; do
    InstallPackage ${package}
  done
}

main "$@"
